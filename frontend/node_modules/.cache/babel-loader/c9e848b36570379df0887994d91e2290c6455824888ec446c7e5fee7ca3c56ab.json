{"ast":null,"code":"import React from'react';import{Navigate}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const PrivateRoute=_ref=>{let{children}=_ref;const{user,loading}=useAuth();if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"})});}return user?/*#__PURE__*/_jsx(_Fragment,{children:children}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});};export default PrivateRoute;","map":{"version":3,"names":["React","Navigate","useAuth","jsx","_jsx","Fragment","_Fragment","PrivateRoute","_ref","children","user","loading","className","to"],"sources":["C:/Users/root/CascadeProjects/legal-assistant-platform/frontend/src/components/PrivateRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\ninterface PrivateRouteProps {\n  children: React.ReactNode;\n}\n\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ children }) => {\n  const { user, loading } = useAuth();\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\n      </div>\n    );\n  }\n\n  return user ? <>{children}</> : <Navigate to=\"/login\" />;\n};\n\nexport default PrivateRoute;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,OAAO,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAMlD,KAAM,CAAAC,YAAyC,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC7D,KAAM,CAAEE,IAAI,CAAEC,OAAQ,CAAC,CAAGT,OAAO,CAAC,CAAC,CAEnC,GAAIS,OAAO,CAAE,CACX,mBACEP,IAAA,QAAKQ,SAAS,CAAC,+CAA+C,CAAAH,QAAA,cAC5DL,IAAA,QAAKQ,SAAS,CAAC,gEAAgE,CAAM,CAAC,CACnF,CAAC,CAEV,CAEA,MAAO,CAAAF,IAAI,cAAGN,IAAA,CAAAE,SAAA,EAAAG,QAAA,CAAGA,QAAQ,CAAG,CAAC,cAAGL,IAAA,CAACH,QAAQ,EAACY,EAAE,CAAC,QAAQ,CAAE,CAAC,CAC1D,CAAC,CAED,cAAe,CAAAN,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}